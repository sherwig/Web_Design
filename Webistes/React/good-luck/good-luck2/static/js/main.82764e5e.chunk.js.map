{"version":3,"sources":["logo.svg","ski.js","Product.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Skis","props","handleClick","bind","e","console","log","this","id","delete","style","backgroundColor","border","cursor","color","fontSize","float","marginTop","borderRadius","onClick","margin","padding","marginBottom","paddingLeft","name","React","Component","Product","state","totalVotes","value","counter","todo","handleChange","handleSubmit","handleVoteChange","handleVoteDown","handleDelete","event","setState","target","newTodo","push","preventDefault","newToDo","filter","item","itemStyle","marginLeft","headerStyle","className","onSubmit","type","onChange","width","listStyle","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.82764e5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// ski.js\n\nimport React from 'react';\n\nclass Skis extends React.Component{\n  constructor(props){\n   super(props);\n   this.handleClick = this.handleClick.bind(this);\n}\n\n//Add Delete in this\n  handleClick(e){\n    //update state\n    {console.log(this.props.id)}\n    this.props.delete(this.props.id);\n\n  }\n\n    render(){\n\n     var itemStyle={\n     color: \"#333\",\n     backgroundColor: \"rgba(255,255,255,.5)\",\n     margin: \"0\",\n     padding: \"5%\",\n     marginBottom: \"5%\",\n     borderRadius: \"5px\"\n   }\n\n   var nameStyle={\n     paddingLeft: \"10%\"\n   }\n\n   var buttonStyle={\n     backgroundColor: \"#66CCFF\",\n     border: \"2px solid #66CCFF\",\n     cursor: \"pointer\",\n     color: \"#FFF\",\n     fontSize: \"100%\",\n     float: \"right\",\n     marginTop: \"5%\",\n     borderRadius: \"5px\"\n   }\n\n      return (\n       // <div style={itemStyle}>\n       // {this.state.votes}\n       // <span style={nameStyle}>{this.props.name} </span>\n       <div>\n       <button style={buttonStyle} onClick={this.handleClick}>Delete</button>\n         <div style={itemStyle}>\n         <span style={nameStyle}>{this.props.name} </span>\n        </div>\n       </div>\n     );\n   }\n\n}\n\n\nexport default Skis;\n","import React from 'react';\n// import './App.css';\nimport Skis from './ski.js'\n// import NameForm from './skis2.js'\n\n\nclass Product extends React.Component{\n    constructor(props){\n    super(props);\n    this.state={\n        totalVotes:0,\n        value: '',\n        counter:0,\n        todo:\n        [\n          // { key: 0,\n          //   name: \"Figure Life Out\"\n          // },\n          // { key: 1,\n          //   name: \"Get Job\"\n          // },\n          // { key: 2,\n          //   name: \"Go Skiing\"\n          // }\n        ]\n    };\n\n\n\n  //binding is necessary for 'this' to work in the callback\n  this.handleChange = this.handleChange.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.handleVoteChange = this.handleVoteChange.bind(this);\n  this.handleVoteDown = this.handleVoteDown.bind(this);\n  this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n    // { console.log(this.state.value) }\n  }\n\n  handleVoteChange(){\n    this.setState({totalVotes: this.state.totalVotes+1});\n  }\n\n  handleVoteDown(){\n    this.setState({totalVotes: this.state.totalVotes-1});\n  }\n\n  // onRemoveItem = i => {\n  //    this.setState(state => {\n  //      const list = state.todo.filter((item, j) => i !== j);\n  //      return {\n  //        list,\n  //      };\n  //    });\n  //  };\n\n// https://www.robinwieruch.de/react-state-array-add-update-remove\n  handleSubmit(event) {\n      var newTodo=\n        {\n          id: this.state.counter,\n          name: this.state.value\n        };\n\n        this.state.todo.push(newTodo);\n      // return {\n      //   todo,\n      //   value: ''\n      // };\n  this.setState({todo: this.state.todo });\n\n    {console.log(this.state.todo)}\n    this.handleVoteChange();\n    this.setState({counter: this.state.counter+1});\n    event.preventDefault();\n  }\n\n  // handleDelete = id => {\n  //   this.setState({\n  //     todo: this.state.todo.filter(\n  //       item => item.id !== id\n  //     )\n  //   });\n  //   this.handleVoteDown();\n  //   {console.log(this.state.todo) }\n  // };\n\n\n\n  handleDelete(id)\n  {\n    {console.log(id)}\n    const newToDo = this.state.todo.filter(item => item.id !==id);\n    this.setState(\n      {\n        todo: newToDo\n      });\n    this.handleVoteDown()\n  }\n\n  // var todo = this.state.todo.filter(item => item.id !== id);\n  //  // {console.log(this.state.todo.item.id) }\n  // this.setState({ todo: todo });\n\n  // handleDelete(id)\n  // {\n  //\n  //\n  // }\n\n  render(){\n    var listStyle={\n      width: \"80%\",\n      margin: \"0\",\n      paddingLeft: \"20\",\n      listStyle: \"none\",\n      marginLeft: \"3%\"\n    }\n\n    var itemStyle={\n      color: \"#333\",\n      backgroundColor: \"rgba(255,255,255,.5)\",\n      // padding: \"5%\",\n      // marginBottom: \"5%\",\n      borderRadius: \"5px\",\n      marginLeft: \"3%\"\n\n    }\n\n    var submitStyle={\n      color: \"#333\",\n      marginTop: \"5%\",\n      marginLeft: \"20%\"\n\n    }\n\n    var headerStyle={\n      color: \"#0xFFFFFF\",\n      marginTop: \"5%\",\n      marginLeft: \"20%\"\n\n    }\n\n    var labelStyle={\n      color: \"#0xFFFFFF\",\n      marginTop: \"5%\",\n      marginLeft: \"0%\"\n\n    }\n\n    // <ul style={listStyle}> {foods.map(item => <li style={itemStyle} key={item.key}> <Skis name={item.name} onVoteChange={this.handleVoteChange}/></li>)}\n// onVoteChange={this.handleVoteChange}\n// <button type=\"button\" onClick={this.handleClick}> Remove </button>\n\n\n  return (\n      <div>\n      <div className=\"favoriteListMain\">\n      <div className=\"header\">\n      <h1 style={headerStyle}>To Do List</h1>\n      </div>\n\n      <div style={submitStyle}>\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          To Do:\n        <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      </div>\n      <ul style={listStyle}> {this.state.todo.map(item => <li style={itemStyle} key={item.id}><Skis name={item.name} id={item.id} delete={this.handleDelete}/></li>)}\n      </ul>\n      <h2 style={headerStyle}>Total things to do: {this.state.totalVotes}</h2>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default Product;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import Skis from './ski.js'\n// import Bindings from './skis2.js'\nimport Product from './Product.js'\n\n//To  publish go to framework resources\n\nfunction App() {\n  return (\n    <div>\n      <Product/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}